{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/About.js","components/JoinAB.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","Helmet","className","mode","to","style","color","xmlns","width","height","d","title","type","id","aboutText","joinText","role","onClick","toggleMode","htmlFor","Textform","useState","text","setText","rows","placeholder","value","onChange","event","target","backgroundColor","border","fill","viewBox","uppercaseText","toUpperCase","lowercaseText","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","length","endsWith","split","href","rel","About","JoinAB","defaultProps","boxTitle","App","setMode","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"6PAKe,SAASA,EAAOC,GAAQ,IAAD,EACpC,OACE,qCACE,cAACC,EAAA,EAAD,UACE,wDAEF,qBACEC,UAAS,6DAAwDF,EAAMG,MADzE,SAGE,sBAAKD,UAAU,kBAAf,UACE,eAAC,IAAD,CACEA,UAAU,uBACVE,GAAG,IACHC,MAAO,CAAEC,MAAsB,YAAfN,EAAMG,KAAqB,QAAU,WAHvD,UAKE,yBACEI,MAAM,6BACNC,MAAM,KACNC,OAAO,MAHT,uBAIS,MAJT,qBAKO,gBALP,0BAMY,uBANZ,wBAOU,aAPV,0BASE,sBAAMC,EAAE,8LACR,sBAAMA,EAAE,yCAVV,IAYCV,EAAMW,SAET,wBACET,UAAU,iBACVU,KAAK,SACL,iBAAe,WACf,iBAAe,0BACf,gBAAc,yBACd,gBAAc,QACd,aAAW,oBAPb,SASE,sBAAMV,UAAU,0BAElB,sBAAKA,UAAU,2BAA2BW,GAAG,yBAA7C,UACE,qBAAIX,UAAU,kCAAd,UACE,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAU,kBAAkB,eAAa,OAAOE,GAAG,IAAzD,oBAIF,oBAAIF,UAAU,WAAd,SACE,cAAC,IAAD,CACEA,UAAU,kBACV,eAAa,OACbE,GAAG,uBAHL,SAKGJ,EAAMc,cAGX,oBAAIZ,UAAU,WAAd,SACE,cAAC,IAAD,CACEA,UAAU,kBACV,eAAa,OACbE,GAAG,wCAHL,SAKGJ,EAAMe,gBAKb,sBAAKb,UAAU,yBAAf,UACE,uBACEA,UAAU,mBACVU,KAAK,WACLI,KAAK,SACLH,GAAG,yBACHI,QAASjB,EAAMkB,aAEjB,uBACEhB,UAAU,+BACViB,QAAQ,yBAFV,uCC5EC,SAASC,EAASpB,GAE/B,IA2CA,EAAwBqB,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAIA,OACE,qCAEE,qBAAKrB,UAAU,YAAf,SACE,sBAAKA,UAAU,YAAf,UACE,uBAAOiB,QAAQ,WAAWjB,UAAU,eAGpC,0BACEA,UAAU,eACVW,GAAG,WACHW,KAAK,IACLC,YAAazB,EAAMyB,YACnBC,MAAOJ,EACPK,SArBa,SAACC,GACtBL,EAAQK,EAAMC,OAAOH,QAqBbrB,MAAO,CACLyB,gBAAgC,YAAf9B,EAAMG,KAAqB,QAAU,UACtDG,MAAsB,YAAfN,EAAMG,KAAqB,UAAY,QAC9C4B,OACiB,YAAf/B,EAAMG,KACF,oBACA,0BAOd,sBAAKD,UAAU,YAAf,UAEE,sBAAKA,UAAU,YAAf,UACE,yBAAQU,KAAK,SAASV,UAAS,kBAAaF,EAAMG,MAAlD,iBAEE,qBACEI,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPuB,KAAK,eACL9B,UAAU,cACV+B,QAAQ,YANV,SAQE,sBAAMvB,EAAE,8NAGZ,wBACEE,KAAK,SACLV,UAAS,kBAAaF,EAAMG,KAAnB,0CACT,iBAAe,WACf,gBAAc,UAEhB,qBAAID,UAAU,wCAAd,UACE,6BACE,cAAC,IAAD,CAAMA,UAAU,gBAAgBE,GAAG,IAAIa,QAnG/B,WAClB,IAAIiB,EAAgBZ,EAAKa,cACzBZ,EAAQW,IAiGE,oCAIF,6BACE,cAAC,IAAD,CAAMhC,UAAU,gBAAgBE,GAAG,IAAIa,QAlG/B,WAClB,IAAImB,EAAgBd,EAAKe,cACzBd,EAAQa,IAgGE,0CAQN,yBACExB,KAAK,SACLV,UAAS,kBAAaF,EAAMG,KAAnB,SACTc,QAvGU,WAEhBM,EADgB,KAmGZ,uBAME,qBACEhB,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPuB,KAAK,eACL9B,UAAU,oBACV+B,QAAQ,YANV,SAQE,sBAAMvB,EAAE,qRAKZ,yBACEE,KAAK,SACLV,UAAS,kBAAaF,EAAMG,KAAnB,SACTc,QArGS,WACf,IAAIK,EAAOgB,SAASC,eAAe,YACnCjB,EAAKkB,SACLC,UAAUC,UAAUC,UAAUrB,EAAKI,QA+F/B,iBAME,sBACEnB,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPuB,KAAK,eACL9B,UAAU,kBACV+B,QAAQ,YANV,UAQE,sBAAMvB,EAAE,6JACR,sBAAMA,EAAE,kMAed,sBACER,UAAU,iBACVG,MAAO,CACLC,MAAsB,YAAfN,EAAMG,KAAqB,UAAY,SAHlD,UAME,6DAEA,8BACE,yBACES,KAAK,SACLV,UAAS,kBAAaF,EAAMG,KAAnB,2BAFX,wBAKE,sBAAMD,UAAU,kFAAhB,SACE,4BACGoB,EAAKsB,OAAS,EACXtB,EAAKuB,SAAS,KACZvB,EAAKwB,MAAM,KAAKF,OAAS,EACzBtB,EAAKwB,MAAM,KAAKF,OAClB,SAIV,yBACEhC,KAAK,SACLV,UAAS,kBAAaF,EAAMG,KAAnB,gCAFX,6BAKE,sBAAMD,UAAU,kFAAhB,SACE,4BAAIoB,EAAKsB,iBAKf,qBAAK1C,UAAU,wBAAf,SACE,wFAC+C,IAC7C,mBACE6C,KAAK,2DACLlB,OAAO,SACPmB,IAAI,aAHN,gBAMK,IARP,0BCvMK,SAASC,EAAMjD,GAC5B,OACE,qCACE,cAACC,EAAA,EAAD,UACE,4DAEF,qBAAKC,UAAU,iBAAf,SACE,sBAAKA,UAAU,YAAYW,GAAG,iCAA9B,UACE,sBAAKX,UAAU,iBAAf,UACE,qBAAKA,UAAU,mBAAmBW,GAAG,4BAArC,SACE,wBACEX,UAAU,oBACVU,KAAK,UACL,iBAAe,WACf,iBAAe,8BACf,gBAAc,OACd,gBAAc,6BACdP,MAAO,CACLyB,gBACiB,YAAf9B,EAAMG,KAAqB,UAAY,UACzCG,MAAO,SAVX,SAaE,8DAGJ,qBACEO,GAAG,6BACHX,UAAU,mCACV,kBAAgB,4BAHlB,SAKE,qBACEA,UAAU,iBACVG,MAAO,CACLyB,gBACiB,YAAf9B,EAAMG,KAAqB,QAAU,UACvCG,MAAsB,YAAfN,EAAMG,KAAqB,UAAY,SALlD,SAQE,8MAGuD,IACrD,4CAJF,+EAUN,sBAAKD,UAAU,uBAAf,UACE,qBAAKA,UAAU,mBAAmBW,GAAG,4BAArC,SACE,wBACEX,UAAU,6BACVU,KAAK,SACL,iBAAe,WACf,iBAAe,8BACf,gBAAc,QACd,gBAAc,6BACdP,MAAO,CACLyB,gBACiB,YAAf9B,EAAMG,KAAqB,UAAY,UACzCG,MAAO,SAVX,SAaE,2DAGJ,qBACEO,GAAG,6BACHX,UAAU,8BACV,kBAAgB,4BAHlB,SAKE,sBACEA,UAAU,iBACVG,MAAO,CACLyB,gBACiB,YAAf9B,EAAMG,KAAqB,QAAU,UACvCG,MAAsB,YAAfN,EAAMG,KAAqB,UAAY,SALlD,UAQE,8BACE,8CADF,+DAIA,8BACE,qDADF,qKAMA,8BACE,iDADF,2HAQN,sBAAKD,UAAU,sBAAf,UACE,oBAAIA,UAAU,mBAAmBW,GAAG,8BAApC,SACE,wBACEX,UAAU,6BACVU,KAAK,SACL,iBAAe,WACf,iBAAe,gCACf,gBAAc,QACd,gBAAc,+BACdP,MAAO,CACLyB,gBACiB,YAAf9B,EAAMG,KAAqB,UAAY,UACzCG,MAAO,SAVX,SAaE,gFAGJ,qBACEO,GAAG,+BACHX,UAAU,8BACV,kBAAgB,8BAHlB,SAKE,qBACEA,UAAU,iBACVG,MAAO,CACLyB,gBACiB,YAAf9B,EAAMG,KAAqB,QAAU,UACvCG,MAAsB,YAAfN,EAAMG,KAAqB,UAAY,SALlD,SAQE,sMAG6C,IAC3C,cAAC,IAAD,CAAMC,GAAG,6BAAT,kCAEQ,IANV,2DClID,SAAS8C,EAAOlD,GAC7B,OACE,qCACE,cAACC,EAAA,EAAD,UACE,6DAEF,sBAAKC,UAAU,+CAAf,UACE,qBACEA,UAAU,uBACVG,MAAO,CACLyB,gBAAgC,YAAf9B,EAAMG,KAAqB,QAAU,UACtDG,MAAsB,YAAfN,EAAMG,KAAqB,UAAY,QAC9C4B,OACiB,YAAf/B,EAAMG,KACF,oBACA,oBACNK,MAAO,SATX,SAYE,sBAAKN,UAAU,YAAf,UACE,qBAAIA,UAAU,yBAAd,sBACW,sBAAMA,UAAU,mBAAhB,4BAEX,mBAAGA,UAAU,iBAAb,iKAKA,mBACE6C,KAAK,2DACLlB,OAAO,SACPmB,IAAI,aACJ9C,UAAS,kBAAaF,EAAMG,KAAnB,SAJX,gCAUJ,qBACED,UAAU,YACVG,MAAO,CACLyB,gBAAgC,YAAf9B,EAAMG,KAAqB,QAAU,UACtDG,MAAsB,YAAfN,EAAMG,KAAqB,UAAY,QAC9C4B,OACiB,YAAf/B,EAAMG,KACF,oBACA,oBACNK,MAAO,SATX,SAYE,sBAAKN,UAAU,YAAf,UACE,oBAAIA,UAAU,yBAAd,oBACA,oBAAGA,UAAU,kBAAb,8FAGE,mBAAGG,MAAO,CAAEC,MAAO,WAAnB,kCAHF,IAIE,8BACE,uCADF,6FAMF,mBACEyC,KAAK,wEACLlB,OAAO,SACPmB,IAAI,aACJ9C,UAAS,kBAAaF,EAAMG,MAJ9B,gCAUJ,qBACED,UAAU,YACVG,MAAO,CACLyB,gBAAgC,YAAf9B,EAAMG,KAAqB,QAAU,UACtDG,MAAsB,YAAfN,EAAMG,KAAqB,UAAY,QAC9C4B,OACiB,YAAf/B,EAAMG,KACF,oBACA,oBACNK,MAAO,SATX,SAYE,sBAAKN,UAAU,YAAf,UACE,oBAAIA,UAAU,yBAAd,4BACA,mBAAGA,UAAU,kBAAb,sKAKA,mBACE6C,KAAK,yCACLlB,OAAO,SACPmB,IAAI,aACJ9C,UAAS,kBAAaF,EAAMG,KAAnB,UAJX,iCHMZJ,EAAOoD,aAAe,CACpBxC,MAAO,aACPG,UAAW,cC4HbM,EAAS+B,aAAe,CACtBC,SAAU,oBACV3B,YAAa,yB,WGtKA4B,MArDf,WAEE,MAAwBhC,mBAAS,WAAjC,mBAAOlB,EAAP,KAAamD,EAAb,KAiBA,OACE,mCACE,eAAC,IAAD,WACE,cAACvD,EAAD,CACEY,MAAM,aACNG,UAAU,WACVC,SAAS,oBACTZ,KAAMA,EACNe,WAxBW,WACJ,YAATf,GACFmD,EAAQ,QACRhB,SAASiB,KAAKlD,MAAMyB,gBAAkB,YAQtCwB,EAAQ,WACRhB,SAASiB,KAAKlD,MAAMyB,gBAAkB,YAgBpC,eAAC,IAAD,WACE,cAAC,IAAD,CAAO0B,OAAK,EAACC,KAAK,uBAAlB,SACE,cAACR,EAAD,CAAO9C,KAAMA,MAGf,cAAC,IAAD,CAAOqD,OAAK,EAACC,KAAK,IAAlB,SACE,cAACrC,EAAD,CACEgC,SAAS,IACT3B,YAAY,uDACZtB,KAAMA,MAIV,cAAC,IAAD,CAAOqD,OAAK,EAACC,KAAK,wCAAlB,SACE,cAACP,EAAD,CAAQ/C,KAAMA,eC1CXuD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF/B,SAASC,eAAe,SAM1BmB,M","file":"static/js/main.48211f18.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>AlwaysBlue | Home</title>\r\n      </Helmet>\r\n      <nav\r\n        className={`navbar sticky-top navbar-expand-lg navbar-dark  bg-${props.mode}`}\r\n      >\r\n        <div className=\"container-fluid\">\r\n          <Link\r\n            className=\"navbar-brand mb-0 h1\"\r\n            to=\"/\"\r\n            style={{ color: props.mode === \"primary\" ? \"white\" : \"#0d6efd\" }}\r\n          >\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"30\"\r\n              height=\"20\"\r\n              height=\"20\"\r\n              fill=\"currentColor\"\r\n              className=\"bi bi-app-indicator\"\r\n              viewBox=\"0 0 16 16\"\r\n            >\r\n              <path d=\"M5.5 2A3.5 3.5 0 0 0 2 5.5v5A3.5 3.5 0 0 0 5.5 14h5a3.5 3.5 0 0 0 3.5-3.5V8a.5.5 0 0 1 1 0v2.5a4.5 4.5 0 0 1-4.5 4.5h-5A4.5 4.5 0 0 1 1 10.5v-5A4.5 4.5 0 0 1 5.5 1H8a.5.5 0 0 1 0 1H5.5z\" />\r\n              <path d=\"M16 3a3 3 0 1 1-6 0 3 3 0 0 1 6 0z\" />\r\n            </svg>\r\n            {props.title}\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                  Home\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link active\"\r\n                  aria-current=\"page\"\r\n                  to=\"/alwaysblue/about-us\"\r\n                >\r\n                  {props.aboutText}\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link active\"\r\n                  aria-current=\"page\"\r\n                  to=\"/alwaysblue/join-alwaysblue-community\"\r\n                >\r\n                  {props.joinText}\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n\r\n            <div className=\"form-check form-switch\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                role=\"switch\"\r\n                id=\"flexSwitchCheckDefault\"\r\n                onClick={props.toggleMode}\r\n              />\r\n              <label\r\n                className=\"form-check-label text-light \"\r\n                htmlFor=\"flexSwitchCheckDefault\"\r\n              >\r\n                Toggle Mode\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\n// props for title and about in header\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Title here\",\r\n  aboutText: \"About here\",\r\n};\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Textform(props) {\r\n  // Function to convert text to uppercase\r\n  const toUppercase = () => {\r\n    let uppercaseText = text.toUpperCase();\r\n    setText(uppercaseText);\r\n  };\r\n\r\n  // Function to convert text to lowercase\r\n  const toLowercase = () => {\r\n    let lowercaseText = text.toLowerCase();\r\n    setText(lowercaseText);\r\n  };\r\n\r\n  // Function to clear text\r\n  const clearText = () => {\r\n    let clearText = \"\";\r\n    setText(clearText);\r\n  };\r\n\r\n  // Function to get email id's from text\r\n  //   const isEmail = () => {\r\n  //     if (text === '') {\r\n  //         alert(\"fill in email\"); return false;\r\n  //     }\r\n  //     var ePat = /\\b[A-Za-z0-9]+@[A-Za-z0-9]+\\.[A-Za-z]{2,4}\\b/;\r\n  //     if (ePat.test(text) === false) {\r\n  //         alert(text + \" is NOT a valid email\");\r\n  //         return false;\r\n  //     }else{\r\n  //              alert(text + \" IS A VALID email\");\r\n  //         return false;\r\n  //     }\r\n  // }\r\n\r\n  // Function to copy text\r\n  const copyText = () => {\r\n    let text = document.getElementById(\"textForm\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n  };\r\n\r\n  // Function to handle onChange\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n  const [text, setText] = useState(\"\");\r\n  // text = \"new text\" // Wrong way to change state\r\n  // setText(\"new text\") // Right way to change state\r\n\r\n  return (\r\n    <>\r\n      {/* Form and button container*/}\r\n      <div className=\"container\">\r\n        <div className=\"mt-3 mb-3\">\r\n          <label htmlFor=\"textForm\" className=\"form-label\">\r\n            {/* <h3>{props.boxTitle}</h3> */}\r\n          </label>\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"textForm\"\r\n            rows=\"8\"\r\n            placeholder={props.placeholder}\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            style={{\r\n              backgroundColor: props.mode === \"primary\" ? \"white\" : \"#212529\",\r\n              color: props.mode === \"primary\" ? \"#212529\" : \"white\",\r\n              border:\r\n                props.mode === \"primary\"\r\n                  ? \"3px solid #0d6efd\"\r\n                  : \"3px solid white\",\r\n            }}\r\n          ></textarea>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Buttons Container */}\r\n      <div className=\"container\">\r\n        {/* Dropdown button with case conversion list */}\r\n        <div className=\"btn-group\">\r\n          <button type=\"button\" className={`btn btn-${props.mode}`}>\r\n            Case\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"30\"\r\n              height=\"22\"\r\n              fill=\"currentColor\"\r\n              className=\"bi bi-fonts\"\r\n              viewBox=\"0 0 16 16\"\r\n            >\r\n              <path d=\"M12.258 3h-8.51l-.083 2.46h.479c.26-1.544.758-1.783 2.693-1.845l.424-.013v7.827c0 .663-.144.82-1.3.923v.52h4.082v-.52c-1.162-.103-1.306-.26-1.306-.923V3.602l.431.013c1.934.062 2.434.301 2.693 1.846h.479L12.258 3z\" />\r\n            </svg>\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className={`btn btn-${props.mode} dropdown-toggle dropdown-toggle-split`}\r\n            data-bs-toggle=\"dropdown\"\r\n            aria-expanded=\"false\"\r\n          ></button>\r\n          <ul className=\"dropdown-menu dropdown-menu-secondary\">\r\n            <li>\r\n              <Link className=\"dropdown-item\" to=\"#\" onClick={toUppercase}>\r\n                Convert to Uppercase\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link className=\"dropdown-item\" to=\"#\" onClick={toLowercase}>\r\n                Convert to Lowercase\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n\r\n        {/* Button to clear text */}\r\n        <button\r\n          type=\"button\"\r\n          className={`btn btn-${props.mode} mx-3`}\r\n          onClick={clearText}\r\n        >\r\n          Clear Text\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"30\"\r\n            height=\"22\"\r\n            fill=\"currentColor\"\r\n            className=\"bi bi-eraser-fill\"\r\n            viewBox=\"0 0 16 16\"\r\n          >\r\n            <path d=\"M8.086 2.207a2 2 0 0 1 2.828 0l3.879 3.879a2 2 0 0 1 0 2.828l-5.5 5.5A2 2 0 0 1 7.879 15H5.12a2 2 0 0 1-1.414-.586l-2.5-2.5a2 2 0 0 1 0-2.828l6.879-6.879zm.66 11.34L3.453 8.254 1.914 9.793a1 1 0 0 0 0 1.414l2.5 2.5a1 1 0 0 0 .707.293H7.88a1 1 0 0 0 .707-.293l.16-.16z\" />\r\n          </svg>\r\n        </button>\r\n\r\n        {/* Button to copy text */}\r\n        <button\r\n          type=\"button\"\r\n          className={`btn btn-${props.mode} mx-2`}\r\n          onClick={copyText}\r\n        >\r\n          Copy\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"30\"\r\n            height=\"22\"\r\n            fill=\"currentColor\"\r\n            className=\"bi bi-clipboard\"\r\n            viewBox=\"0 0 16 16\"\r\n          >\r\n            <path d=\"M4 1.5H3a2 2 0 0 0-2 2V14a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V3.5a2 2 0 0 0-2-2h-1v1h1a1 1 0 0 1 1 1V14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V3.5a1 1 0 0 1 1-1h1v-1z\" />\r\n            <path d=\"M9.5 1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-1a.5.5 0 0 1 .5-.5h3zm-3-1A1.5 1.5 0 0 0 5 1.5v1A1.5 1.5 0 0 0 6.5 4h3A1.5 1.5 0 0 0 11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3z\" />\r\n          </svg>\r\n        </button>\r\n\r\n        {/* Button to get emailID from text */}\r\n        {/* <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary mx-2\"\r\n          onClick={isEmail}\r\n        >\r\n          Extract Email ID\r\n        </button> */}\r\n      </div>\r\n\r\n      {/* Summary container */}\r\n      <div\r\n        className=\"container mt-5\"\r\n        style={{\r\n          color: props.mode === \"primary\" ? \"#212529\" : \"white\",\r\n        }}\r\n      >\r\n        <h3>Here's your text summary...</h3>\r\n\r\n        <p>\r\n          <button\r\n            type=\"button\"\r\n            className={`btn btn-${props.mode} position-relative mt-3`}\r\n          >\r\n            Total Words\r\n            <span className=\"position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger\">\r\n              <b>\r\n                {text.length > 0\r\n                  ? text.endsWith(\" \")\r\n                    ? text.split(\" \").length - 1\r\n                    : text.split(\" \").length\r\n                  : 0}\r\n              </b>\r\n            </span>\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className={`btn btn-${props.mode} position-relative mt-3 mx-3`}\r\n          >\r\n            Total Characters\r\n            <span className=\"position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger\">\r\n              <b>{text.length}</b>\r\n            </span>\r\n          </button>\r\n        </p>\r\n\r\n        <div className=\"note mt-5 text-center\">\r\n          <h6>\r\n            Wont lie !! Handcrafted with ❤️ & VS Code by{\" \"}\r\n            <a\r\n              href=\"https://www.linkedin.com/in/dhvanil-vaghasiya-bb38781a7/\"\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n            >\r\n              DV\r\n            </a>{\" \"}\r\n            😇\r\n          </h6>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\n// props for heading and placeholder\r\nTextform.propTypes = {\r\n  boxTitle: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string,\r\n};\r\n\r\nTextform.defaultProps = {\r\n  boxTitle: \"Heading goes here\",\r\n  placeholder: \"Placeholder text here\",\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nexport default function About(props) {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>AlwaysBlue | About Us</title>\r\n      </Helmet>\r\n      <div className=\"container mt-5\">\r\n        <div className=\"accordion\" id=\"accordionPanelsStayOpenExample\">\r\n          <div className=\"accordion-item\">\r\n            <div className=\"accordion-header\" id=\"panelsStayOpen-headingOne\">\r\n              <button\r\n                className=\"accordion-button \"\r\n                type=\"button \"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#panelsStayOpen-collapseOne\"\r\n                aria-expanded=\"true\"\r\n                aria-controls=\"panelsStayOpen-collapseOne\"\r\n                style={{\r\n                  backgroundColor:\r\n                    props.mode === \"primary\" ? \"#0d6efd\" : \"#212529\",\r\n                  color: \"white\",\r\n                }}\r\n              >\r\n                <h5>What's AlwaysBlue ❓</h5>\r\n              </button>\r\n            </div>\r\n            <div\r\n              id=\"panelsStayOpen-collapseOne\"\r\n              className=\"accordion-collapse collapse show\"\r\n              aria-labelledby=\"panelsStayOpen-headingOne\"\r\n            >\r\n              <div\r\n                className=\"accordion-body\"\r\n                style={{\r\n                  backgroundColor:\r\n                    props.mode === \"primary\" ? \"white\" : \"#ABB0B8\",\r\n                  color: props.mode === \"primary\" ? \"#212529\" : \"black\",\r\n                }}\r\n              >\r\n                <p>\r\n                  AlwaysBlue is here for all your text based utility needs.\r\n                  Adding new functionalities every week. Talking about the name,\r\n                  I firmly believe Sky is the Limit and so I call this{\" \"}\r\n                  <b>Always Blue</b>. A contradiction is set when you switch to\r\n                  Dark Mode 😜\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"accordion-item  mt-1\">\r\n            <div className=\"accordion-header\" id=\"panelsStayOpen-headingTwo\">\r\n              <button\r\n                className=\"accordion-button collapsed\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#panelsStayOpen-collapseTwo\"\r\n                aria-expanded=\"false\"\r\n                aria-controls=\"panelsStayOpen-collapseTwo\"\r\n                style={{\r\n                  backgroundColor:\r\n                    props.mode === \"primary\" ? \"#0d6efd\" : \"#212529\",\r\n                  color: \"white\",\r\n                }}\r\n              >\r\n                <h5>Why AlwaysBlue ❓</h5>\r\n              </button>\r\n            </div>\r\n            <div\r\n              id=\"panelsStayOpen-collapseTwo\"\r\n              className=\"accordion-collapse collapse\"\r\n              aria-labelledby=\"panelsStayOpen-headingTwo\"\r\n            >\r\n              <div\r\n                className=\"accordion-body\"\r\n                style={{\r\n                  backgroundColor:\r\n                    props.mode === \"primary\" ? \"white\" : \"#ABB0B8\",\r\n                  color: props.mode === \"primary\" ? \"#212529\" : \"black\",\r\n                }}\r\n              >\r\n                <p>\r\n                  <b>Easy to Use: </b> Simply add your text and use utilities as\r\n                  per your need.\r\n                </p>\r\n                <p>\r\n                  <b>Privacy Guaranteed: </b> Even for text, we care about your\r\n                  privacy. Texts add here are secured via a 256-bit encrypted\r\n                  SSL connection and deleted automatically as you leave\r\n                  AlwaysBlue\r\n                </p>\r\n                <p>\r\n                  <b>It’s Free: </b> We understand users text utility needs and\r\n                  so there is no software to install, registrations, or\r\n                  watermarks.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"accordion-item mt-1\">\r\n            <h2 className=\"accordion-header\" id=\"panelsStayOpen-headingThree\">\r\n              <button\r\n                className=\"accordion-button collapsed\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#panelsStayOpen-collapseThree\"\r\n                aria-expanded=\"false\"\r\n                aria-controls=\"panelsStayOpen-collapseThree\"\r\n                style={{\r\n                  backgroundColor:\r\n                    props.mode === \"primary\" ? \"#0d6efd\" : \"#212529\",\r\n                  color: \"white\",\r\n                }}\r\n              >\r\n                <h5>Want to join Contributors community ❓</h5>\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"panelsStayOpen-collapseThree\"\r\n              className=\"accordion-collapse collapse\"\r\n              aria-labelledby=\"panelsStayOpen-headingThree\"\r\n            >\r\n              <div\r\n                className=\"accordion-body\"\r\n                style={{\r\n                  backgroundColor:\r\n                    props.mode === \"primary\" ? \"white\" : \"#ABB0B8\",\r\n                  color: props.mode === \"primary\" ? \"#212529\" : \"black\",\r\n                }}\r\n              >\r\n                <p>\r\n                  A community where each and every effort of yours is counted.\r\n                  Everyone is building something or other but we are failing to\r\n                  appreciate efforts made by begineers. Join{\" \"}\r\n                  <Link to=\"/join-alwaysblue-community\">\r\n                    AlwaysBlue Community\r\n                  </Link>{\" \"}\r\n                  and learn, share and show your skills.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nexport default function JoinAB(props) {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>AlwaysBlue | Community</title>\r\n      </Helmet>\r\n      <div className=\"container mt-5 d-flex justify-content-center\">\r\n        <div\r\n          className=\"card mx-4 style={{}}\"\r\n          style={{\r\n            backgroundColor: props.mode === \"primary\" ? \"white\" : \"#ABB0B8\",\r\n            color: props.mode === \"primary\" ? \"#291252\" : \"black\",\r\n            border:\r\n              props.mode === \"primary\"\r\n                ? \"3px solid #0d6efd\"\r\n                : \"3px solid #343a40\",\r\n            width: \"18rem\",\r\n          }}\r\n        >\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title text-center\">\r\n              LinkedIn <span className=\"badge bg-success\">Recommended</span>\r\n            </h5>\r\n            <p className=\"card-text mt-3\">\r\n              Lets connect here. Lets network and build something we all can be\r\n              proud of. Drop me a message and I will get back to you within half\r\n              an hour. Sure.\r\n            </p>\r\n            <a\r\n              href=\"https://www.linkedin.com/in/dhvanil-vaghasiya-bb38781a7/\"\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n              className={`btn btn-${props.mode} mt-5`}\r\n            >\r\n              Let's Connect\r\n            </a>\r\n          </div>\r\n        </div>\r\n        <div\r\n          className=\"card mx-4\"\r\n          style={{\r\n            backgroundColor: props.mode === \"primary\" ? \"white\" : \"#ABB0B8\",\r\n            color: props.mode === \"primary\" ? \"#212529\" : \"black\",\r\n            border:\r\n              props.mode === \"primary\"\r\n                ? \"3px solid #0d6efd\"\r\n                : \"3px solid #343a40\",\r\n            width: \"18rem\",\r\n          }}\r\n        >\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title text-center\">Email </h5>\r\n            <p className=\"card-text  mt-3\">\r\n              In the world full of professional emails, just drop a casual email\r\n              with subject \"\r\n              <b style={{ color: \"#0d6efd\" }}>AlwaysBlue Community</b>\"\r\n              <p>\r\n                <b>NOTE: </b>If the button redirects to an Untitled tab then\r\n                mail us at AlwaysBlueCommunity@pm.me\r\n              </p>\r\n            </p>\r\n\r\n            <a\r\n              href=\"mailto:AwaysBlueCommunity@protonmail.com?Subject=AlwaysBlue Community\"\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n              className={`btn btn-${props.mode}`}\r\n            >\r\n              Drop an Email\r\n            </a>\r\n          </div>\r\n        </div>\r\n        <div\r\n          className=\"card mx-4\"\r\n          style={{\r\n            backgroundColor: props.mode === \"primary\" ? \"white\" : \"#ABB0B8\",\r\n            color: props.mode === \"primary\" ? \"#212529\" : \"black\",\r\n            border:\r\n              props.mode === \"primary\"\r\n                ? \"3px solid #0d6efd\"\r\n                : \"3px solid #343a40\",\r\n            width: \"18rem\",\r\n          }}\r\n        >\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title text-center\">Telegram Group</h5>\r\n            <p className=\"card-text mt-3 \">\r\n              Building a large community needs large space. Telegram ships with\r\n              no limits. Join group, share your work and network with like\r\n              minded coders. Join now!!\r\n            </p>\r\n            <a\r\n              href=\"https://t.me/joinchat/z0HMJp09OT1iMTM9\"\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n              className={`btn btn-${props.mode} mt-5 `}\r\n            >\r\n              Join Now\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Textform from \"./components/Textform\";\nimport About from \"./components/About\";\nimport JoinAB from \"./components/JoinAB\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  // To control dark-light mode from App.js itself\n  const [mode, setMode] = useState(\"primary\");\n  const toggleMode = () => {\n    if (mode === \"primary\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#495057\";\n\n      // To change title dynamically\n      // setInterval(() => {\n      //   document.title=\"Not a good practice\"\n\n      // }, 2000);\n    } else {\n      setMode(\"primary\");\n      document.body.style.backgroundColor = \"white\";\n    }\n  };\n\n  return (\n    <>\n      <Router>\n        <Navbar\n          title=\"AlwaysBlue\"\n          aboutText=\"About Us\"\n          joinText=\"Join AB Community\"\n          mode={mode}\n          toggleMode={toggleMode}\n        />\n\n        {/* exact is written to match the exact patch. Watch video no. 16 Time 13:35 */}\n        <Switch>\n          <Route exact path=\"/alwaysblue/about-us\">\n            <About mode={mode} />\n          </Route>\n\n          <Route exact path=\"/\">\n            <Textform\n              boxTitle=\" \"\n              placeholder=\"Start typing, or copy & paste your document here....\"\n              mode={mode}\n            />\n          </Route>\n\n          <Route exact path=\"/alwaysblue/join-alwaysblue-community\">\n            <JoinAB mode={mode} />\n          </Route>\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}